# -*- coding: utf-8 -*-
"""no_2606(DFS).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NF4PP4tZmG7yZ2K8xC5RQZE7PC0LDo8f
"""

'''
입력내용
: 맨 먼저 정점의 개수를 입력받고 그 다음번에 간선의 개수를 입력받는다

  이후 연결관계 설정을 입력받는다. 

출력내용 
: 1번 컴퓨터가 바이러스에 걸렸을 때 총 몇대의 컴퓨터가 감염받는가
'''

import sys #colab말고 다른 ide 에서 돌려라 
N = int(sys.stdin.readline()) #컴퓨터의 수 
M = int(sys.stdin.readline()) #연결 수 

# 인접 list 생성 
adList = [[] for _ in range(N+1)] # 빈 인접 list 생성 
for _ in range(1,M+1):
    edge1, edge2 = map(int, sys.stdin.readline().split())
    adList[edge1].append(edge2)
    adList[edge2].append(edge1)

# 풀이(1) : 스택을 이용한 풀이
stack = [1]   # → 1을 스택에 추가 
visited = []  # visited 초기값 정의 

while stack:
    current = stack.pop()
    for neighbor in adList[current]:
        if neighbor not in visited:
            stack.append(neighbor)

        # visited 에 current를 추가 
    if current not in visited:
        visited.append(current)

print(len(visited)-1)

# 풀이(2) : 재귀함수를 이용한 풀이 
visited = [0 for _ in range(N+1)]

#재귀함수 생성 
def dfs(v):
    visited[v] = 1
    for next_v in adList[v]:
        if not visited[next_v]:
            dfs(next_v)
    return visited 
print(dfs(1).count(1)-1)